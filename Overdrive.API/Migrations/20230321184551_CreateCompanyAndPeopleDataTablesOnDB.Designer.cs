// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Overdrive.API.Model.context;

#nullable disable

namespace Overdrive.API.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230321184551_CreateCompanyAndPeopleDataTablesOnDB")]
    partial class CreateCompanyAndPeopleDataTablesOnDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Overdrive.API.Model.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("cep");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("city");

                    b.Property<int?>("Number")
                        .HasColumnType("int")
                        .HasColumnName("number");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("street");

                    b.HasKey("Id");

                    b.ToTable("address");
                });

            modelBuilder.Entity("Overdrive.API.Model.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long?>("AddressId")
                        .HasColumnType("bigint");

                    b.Property<string>("CNAE")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("cnae");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)")
                        .HasColumnName("cnpj");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("company_name");

                    b.Property<double?>("FinanceCapital")
                        .HasColumnType("double")
                        .HasColumnName("finance_capital");

                    b.Property<string>("LegalNature")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("legal_nature");

                    b.Property<DateTime?>("OpeningDate")
                        .IsRequired()
                        .HasColumnType("Date");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<string>("TradingName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("trading_name");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("company");
                });

            modelBuilder.Entity("Overdrive.API.Model.People", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("rg");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<string>("User")
                        .HasColumnType("longtext")
                        .HasColumnName("user");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("people");
                });

            modelBuilder.Entity("Overdrive.API.Model.Company", b =>
                {
                    b.HasOne("Overdrive.API.Model.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Overdrive.API.Model.People", b =>
                {
                    b.HasOne("Overdrive.API.Model.Company", "Company")
                        .WithMany("peoples")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Overdrive.API.Model.Company", b =>
                {
                    b.Navigation("peoples");
                });
#pragma warning restore 612, 618
        }
    }
}
